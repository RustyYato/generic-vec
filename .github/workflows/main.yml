name: main
on:
  push:
    branches: [main]
jobs:
  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # windows and macos are disabled, because we don't do anything target specific
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run doc tests
      run: cargo +nightly test --verbose --all-features --doc

  nightly_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # windows and macos are disabled, because we don't do anything target specific
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
        rust: [nightly]
        features_std: ["", "alloc", "std"]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: cargo +nightly test --lib --tests --verbose --no-default-features --features "${{ matrix.features_std }}" --features nightly

  stable_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # windows and macos are disabled, because we don't do anything target specific
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
        rust: [stable]
        features_std: ["", "alloc", "std"] 

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: cargo +stable test --lib --tests --verbose --no-default-features --features "${{ matrix.features_std }}"
